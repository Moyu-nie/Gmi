library(rmarkdown)
usethis::use_readme_rmd()
file.create("R/add.R")
devtools::document()
?Sepgroup
devtools::document()
devtools::document()
getcwd()
getcwd()
devtools::document()
renv::snapshot()
devtools::document()
install.packages("devtools")
devtools::document()
install.packages("styler")
install.packages("styler")
library("styler")
library(styler)
install.packages("styler")
devtools::document()
devtools::document()
devtools::document()
install.packages("devtools")
renv::snapshot()
renv::update()
renv::snapshot()
renv::snapshot()
renv::restore()
renv::init()
renv::snapshot()
install.packages("styler")
renv::snapshot()
library(styler)
styler::style_pkg()
renv::snapshot()
renv::install("devtools")
renv::snapshot()
library(renv)
renv::installed()
renv::dependencies()
renv::install("ggplot2")
renv::snapshot()
renv::dependencies()
devtools::document()
usethis::use_testthat()
install.packages("testthat")
usethis::use_test()
usethis::use_mit_license()
usethis::use_version()
devtools::check()
install.packages("pkgdown")
usethis::use_pkgdown()
pkgdown::build_site()
source("~/Downloads/Gmi/R/St.R")
Rcpp:::SHLIB("eigen_matmul")
Rcpp::SHLIB("eigen_matmul")
library(Rcpp)
Rcpp:::SHLIB("eigen_matmul")
Rcpp::SHLIB("eigen_matmul")
library(RcppArmadillo)
Rcpp::SHLIB("eigen_matmul")
Rcpp:::SHLIB("eigen_matmul")
usethis::use_package("Rcpp")
Rcpp::useRcpp()
Rcpp::fun()
library(Rcpp)
Rcpp::fun()
usethis::use_rcpp()
usethis::use_package("RcppArmadillo", "RcppEigen")
usethis::use_package("RcppEigen", "LinkingTo")
devtools::document()
install.packages("cPCG")
renv::snapshot()
devtools::document()
rm(list = c("St"))
devtools::document()
devtools::load_all()
devtools::document()
devtools::document()
install.packages("lintr")
lintr::lint_package()
usethis::use_github_action("lint")
install.packages("testthat")
usethis::use_test()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
devtools:::test_coverage()
Rcpp::compileAttributes()
devtools::load_all()
devtools:::test_coverage()
rcpp::compileAttributes()
Rcpp::compileAttributes()
devtools:::test_coverage()
usethis::use_package("RcppEigen")
devtools::document()
devtools::load_all()
usethis::use_rcpp()
devtools::load_all()
Rcpp::compileAttributes()
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
devtools:::test_coverage()
devtools::document()
devtools::test()
devtools::test()
usethis::use_test()
usethis::use_test()
rlang::last_trace()
rlang::last_trace()
usethis::use_test()
install.packages("MASS")
devtools::document()
devtools::check()
devtools::load_all()
install.packages("pkgdown")
usethis::use_pkgdown()
pkgdown::build_site()
renv::status()
renv::snapshot()
devtools::document()
devtools::document()
usethis::use_pkgdown()
pkgdown::build_site()
pkgdown::clean_site(force = TRUE)
pkgdown::build_site()
devtools::check()
devtools::install()
Sigmoid(0.5)
p <- 200
n <- 600
alpha2 <- c(rep(c(4,3,2),each = 2),rep(0,p-3*2))
gamma2 <- rep(0,choose(p,2))
mu2 <- 2
rho2 <- 0.3
p <- 200
n <- 600
alpha2 <- c(rep(c(4,3,2),each = 2),rep(0,p-3*2))
gamma2 <- rep(0,choose(p,2))
mu2 <- 2
rho2 <- 0.3
# 生成全部的两两配对
aall = paste("X", combn(1 : p, 2, paste, collapse="X"), sep="")
# 第一个交互项的拆解
aa1 = outer(1:2, 3:4, f <- function(x, y) {
paste("X", pmin(x, y), "X", pmax(x, y), sep = "")
})
# aa2 = outer(1:2, 5:6, f <- function(x, y) {
#   paste("X", pmin(x, y), "X", pmax(x, y), sep = "")
# })
aa1 = as.vector(aa1)
#aa2 = as.vector(aa2)
gamma2[match(aa1, aall)] <- c(rep(4,4))
datList2 = gendata_simp(1, n, p, alpha2, mu2, 0.3)
devtools::document()
devtools::install()
datList2 = gendata_simp(1, n, p, alpha2, mu2, 0.3)
x2 = datList2$x
Y2 = datList2$Y
gmi.fit = Gmi(x2, Y2, beta = rep(0,p), lambda.min.ratio = 0.01, n.lambda = 100,
penalty = "SCAD", eta = 0.6,tune = "EBIC") # ordering
usethis::use_rcpp()
usethis::use_rcpp()
ls(getNamespace("Gmi"), all.names = TRUE)
Rcpp::compileAttributes()
devtools::document()
devtools::install()
gmi.fit = Gmi(x2, Y2, beta = rep(0,p), lambda.min.ratio = 0.01, n.lambda = 100,
penalty = "SCAD", eta = 0.6,tune = "EBIC") # ordering
devtools::document()
gmi.fit = Gmi(x2, Y2, beta = rep(0,p), lambda.min.ratio = 0.01, n.lambda = 100,
penalty = "SCAD", eta = 0.6,tune = "EBIC") # ordering
devtools::document()
devtools::install()
gmi.fit = Gmi(x2, Y2, beta = rep(0,p), lambda.min.ratio = 0.01, n.lambda = 100,
penalty = "SCAD", eta = 0.6,tune = "EBIC") # ordering
library(Gmi)
gmi.fit = Gmi(x2, Y2, beta = rep(0,p), lambda.min.ratio = 0.01, n.lambda = 100,
penalty = "SCAD", eta = 0.6,tune = "EBIC") # ordering
roxygen2::roxygenise()
devtools::document()
gmi.fit = Gmi(x2, Y2, beta = rep(0,p), lambda.min.ratio = 0.01, n.lambda = 100,
penalty = "SCAD", eta = 0.6,tune = "EBIC") # ordering
Rcpp:::SHLIB("eigen_matmul.cpp")
Rcpp.package.skeleton("Gmi")
added useDynLib directive to NAMESPACE
devtools::document()
Rcpp.package.skeleton("Gmi")
Rcpp.package.skeleton("Gmi")
usethis::use_namespace(roxygen = TRUE)
usethis::use_description()
usethis::use_package(package = "cPCG", type = "Imports")
usethis::use_package(package = "MASS", type = "Imports")
devtools::document()
usethis::use_package(package = "Rcpp", type = "Imports")
usethis::use_package(package = "Rcpp", type = "LinkingTo")
usethis::use_package(package = "RcppEigen", type = "LinkingTo")
devtools::document()
devtools::document()
usethis::use_namespace()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
remove.packages("Gmi", lib="~/Library/Caches/org.R-project.R/R/renv/library/Gmi-1a560525/macos/R-4.4/x86_64-apple-darwin20")
devtools::install()
gmi.fit = Gmi(x2, Y2, beta = rep(0,p), lambda.min.ratio = 0.01, n.lambda = 100,
penalty = "SCAD", eta = 0.6,tune = "EBIC") # ordering
View(gmi.fit)
gmi.fit[["beta.m"]]
devtools::document()
devtools::document()
devtools::install()
p <- 200
n <- 600
alpha2 <- c(rep(c(4,3,2),each = 2),rep(0,p-3*2))
gamma2 <- rep(0,choose(p,2))
mu2 <- 2
rho2 <- 0.3
# 生成全部的两两配对
aall = paste("X", combn(1 : p, 2, paste, collapse="X"), sep="")
# 第一个交互项的拆解
aa1 = outer(1:2, 3:4, f <- function(x, y) {
paste("X", pmin(x, y), "X", pmax(x, y), sep = "")
})
# aa2 = outer(1:2, 5:6, f <- function(x, y) {
#   paste("X", pmin(x, y), "X", pmax(x, y), sep = "")
# })
aa1 = as.vector(aa1)
#aa2 = as.vector(aa2)
gamma2[match(aa1, aall)] <- c(rep(4,4))
#gamma2[match(aa2, aall)] <- c(rep(3,4))
#datList2 = gendata(1,n,p,alpha2,gamma2, mu2, rho2)
datList2 = gendata_simp(1, n, p, alpha2, mu2, 0.3)
x2 = datList2$x
Y2 = datList2$Y
datList2 = gendata_simp(2, n, p, alpha2, mu2, 0.3)
x2 = datList2$x
Y2 = datList2$Y
gmi.fit = Gmi(x2, Y2, beta = rep(0,p), lambda.min.ratio = 0.01, n.lambda = 100,
penalty = "SCAD", eta = 0.5,tune = "EBIC") # ordering
View(gmi.fit)
St(2,3)
St(2,1)
St(2,4)
